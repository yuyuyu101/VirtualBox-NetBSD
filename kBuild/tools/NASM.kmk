# $Id: NASM.kmk 2413 2010-09-11 17:43:04Z bird $
## @file
# kBuild Tool Config - Netwide Assembler v0.98+.
#

#
# Copyright (c) 2004-2010 knut st. osmundsen <bird-kBuild-spamx@anduin.net>
#
# This file is part of kBuild.
#
# kBuild is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# kBuild is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with kBuild; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
# As a special exception you are granted permission to include this file, via
# the kmk include directive, as you wish without this in itself causing the
# resulting makefile, program or whatever to be covered by the GPL license.
# This exception does not however invalidate any other reasons why the makefile,
# program, whatever should not be covered the GPL.
#
#

TOOL_NASM := Netwide Assembler v0.98+

# Tool Specific Properties
ifndef PATH_TOOL_NASM
 PATH_TOOL_NASM := $(sort $(wildcard $(PATH_DEVTOOLS_BLD)/nasm/v*.*))
 ifneq ($(PATH_TOOL_NASM),)
  PATH_TOOL_NASM := $(call lastword,$(PATH_TOOL_NASM))
 endif
else
 # Resolve any fancy stuff once and for all.
 PATH_TOOL_NASM := $(PATH_TOOL_NASM)
endif

ifneq ($(PATH_TOOL_NASM),)
 TOOL_NASM_AS ?= $(PATH_TOOL_NASM)/nasm$(HOSTSUFF_EXE)
else
 TOOL_NASM_AS ?= nasm$(HOSTSUFF_EXE)
endif

# General Properties used by kBuild
TOOL_NASM_ASFLAGS ?=


## Compile Assembly source.
# @param    $(target)   Normalized main target name.
# @param    $(source)   Source filename (relative).
# @param    $(obj)      Object file name. This shall be (re)created by the compilation.
# @param    $(dep)      Dependcy file. This shall be (re)created by the compilation.
# @param    $(flags)    Flags.
# @param    $(defs)     Definitions. No -D or something.
# @param    $(incs)     Includes. No -I or something.
# @param    $(dirdep)   Directory creation dependency.
# @param    $(deps)     Other dependencies.
# @param    $(outbase)  Output basename (full). Use this for list files and such.
# @param    $(objsuff)  Object suffix.
#
TOOL_NASM_COMPILE_AS_OUTPUT = $(outbase).lst
TOOL_NASM_COMPILE_AS_DEPEND =
TOOL_NASM_COMPILE_AS_DEPORD =
define TOOL_NASM_COMPILE_AS_CMDS
	$(QUIET)$(TOOL_NASM_AS)\
		$(flags) $(addsuffix /,$(addprefix -i, $(incs))) $(addprefix -D, $(defs))\
		-l $(outbase).lst\
		-o $(obj)\
		$(abspath $(source))
	$(QUIET)$(REDIRECT) -wo $(dep) -- $(TOOL_NASM_AS)\
		$(flags) $(addsuffix /,$(addprefix -i, $(incs))) $(addprefix -D, $(defs))\
		-l $(outbase).lst\
		-o $(obj)\
		$(abspath $(source)) \
		-M
endef

